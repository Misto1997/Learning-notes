1. to add a new project to current repository.
	-git init
	-git remote add origin git@github.com:username/new_repo
	-git commit -m "comment"
	-git push -u origin master
	-always do "git fetch" before changing file or before pushing file to remote.it gives you meta data
		whether your remote is synced  with local or not.

2. to add and commit in one statement
	-git commit -am "message"
	
3. to delete some file from git
	-git rm filename
	-git rm -r filename	:Allow recursive removal when a leading directory name is given.
	-git rm --cached filename :Use this option to unstage and remove paths only from the index.
			or
	-delete file from local
	-git commit -am "message"
	-git push
	
4. to unstage from git commit/to revoke commit
	-git reset HEAD~
	-again add and commit changes

5. to revoke push from remote repository
	-git reset --hard <last commit id>
	-git push --force
		
6.	to unstage from git add/revoke git add
	-git restore --staged filename	
	
7.	to check difference between current and master branch
	-git diff master currentBranchName
	
8.	to check logs
	-git log    : it will show all logs
	-git log -n 5   : it will show last 5 logs
	-git log --author="rahul"   :it will show all logs by this author
	
9.	to restore deleted/changed file
	-git restore filename
	
10.	to see changes in modified file 
	-git diff filename	:before staging
	-git diff --staged filename   :after staging
	
11.	to move/rename file
	-git mv originalfilename newfilename

12.	to revert any commit
	-git revert commitId
	
13.	to ignore already tracked file in .gitignore
	-	1-git rm --cached filename  : Use this option to unstage and remove paths only from the index.
		2-git add .gitignore file with ignore filename
		
14. branching
	-git branch branchName	:to create branch
	-git checkout branchName	:to switch between branches
	-git checkout -b branchName	:to create and switch to new branch in one statement
	-git branch -d branchName	:to delete branch locally(first go to master and then delete)
	-git branch -D branchname	:to delete a branch which have some commits
	-go to master	:to delete branch from server
		-git push origin :branchName
	-go to master and then	:to merge branch to master
		-git merge branchName
	-git push origin +:refs/heads/#branch_name	:to delete branch refs
	-git branch -m <oldName> <newname>       :to rename branchName
	
15.	checkout to master from branch if not committed/stashed
	-git checkout master	:if changes conflicts to master then it will ask to resolve it first
	-git checkout master	:if changes doesnt conflicts to master it will ignore the changes
	
16.	to create branch from branch
	-got to that branch and then
		-git checkout -b branchName
	-from master
		-git checkout -b branchname branchname or parent branch
		
17.	to check changes log in graph way
	-git log --all --graph --decorate --oneline --simplify-by-decoration
	
18.	git automatically does fast forward merge if master doesnt have any changes that does not exist in branch to be merged
	else it does real recurssive merge with a new commit.
	
19.	Merge conflicts:-
	-git merge --abort	:to abort the merge request
	-go to branch
		-git pull origin master	:take changes from master
		-resolve them manually
		-git commit -am "changes"
		-git push
		
		or
	-goto master
		-git pull      --- from remote master
	-goto branch again
		-git merge master
		-resolve them manually
		-git commit -am "changes"
		-git push

20.	to save your work and work around with other changes
	-git stash save or git stash push	:to save your work and index
	-git stash list	: to check saved content list
	-git stash pop	:to get saved data back
	-git stash apply	:to get saved data and it also remains at saved list

21 Maven dependency tree:
	- to check dependency tree
		-mvn dependency:tree

	- to check redundant dependency tree
		- mvn dependency:tree -Dverbose                                                  

	to check redundant dependency for specific module
		- mvn -pl <module-name> -am  dependency:tree -Dverbose

22. set upstream
	- git remote add upstream <git-repo-url>
 


